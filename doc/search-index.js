var searchIndex = new Map(JSON.parse('[\
["indextree",{"t":"FPPFFFFPFPPFGGFFFPPPFFPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Ancestors","AppendAncestor","AppendSelf","Arena","Children","DebugPrettyPrint","Descendants","End","FollowingSiblings","InsertAfterSelf","InsertBeforeSelf","Node","NodeEdge","NodeError","NodeId","PrecedingSiblings","Predecessors","PrependAncestor","PrependSelf","Removed","ReverseChildren","ReverseTraverse","Start","Traverse","ancestors","append","append_value","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","checked_append","checked_insert_after","checked_insert_before","checked_prepend","children","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","count","debug_pretty_print","default","descendants","detach","eq","eq","eq","eq","first_child","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","following_siblings","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get_mut","get_mut","get_node_id","get_node_id_at","hash","hash","index","index_mut","insert_after","insert_before","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","is_removed","is_removed","iter","iter_mut","last_child","new","new_node","next","next","next","next","next","next","next","next","next","next_sibling","next_traverse","parent","partial_cmp","preceding_siblings","predecessors","prepend","prev_traverse","previous_sibling","remove","remove_subtree","reserve","reverse_children","reverse_traverse","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","traverse","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity"],"q":[[0,"indextree"],[266,"indextree::id"],[267,"indextree::arena"],[268,"indextree::traverse"],[269,"indextree::error"],[270,"core::result"],[271,"core::clone"],[272,"indextree::debug_pretty_print"],[273,"indextree::node"],[274,"core::cmp"],[275,"core::option"],[276,"core::fmt"],[277,"core::num::nonzero"],[278,"core::hash"],[279,"core::iter::traits::iterator"],[280,"alloc::string"],[281,"core::any"]],"i":[0,6,6,0,0,0,0,17,0,6,6,0,0,0,0,0,0,6,6,6,0,0,17,0,1,1,1,2,10,6,1,11,3,12,13,14,8,15,16,17,18,19,2,10,6,1,11,3,12,13,14,8,15,16,17,18,19,2,1,1,1,1,1,2,2,10,6,1,11,3,12,13,14,8,15,16,17,18,19,2,10,6,1,11,3,12,13,14,8,15,16,17,18,19,1,2,1,2,1,1,2,1,11,17,11,2,10,10,6,6,1,1,11,11,17,1,2,10,6,1,11,3,12,13,14,8,15,16,17,18,19,2,11,2,11,2,2,1,17,2,2,1,1,2,10,6,1,1,1,11,3,12,13,14,8,15,16,17,18,19,3,12,13,14,8,15,16,18,19,2,1,11,2,2,11,2,2,3,12,13,14,8,15,16,18,19,11,17,11,1,1,1,1,17,11,1,1,2,1,1,2,10,6,1,11,3,12,13,14,8,15,16,17,18,19,10,6,1,11,1,2,10,6,1,11,3,12,13,14,8,15,16,17,18,19,2,10,6,1,11,3,12,13,14,8,15,16,17,18,19,2,10,6,1,11,3,12,13,14,8,15,16,17,18,19,2],"f":"````````````````````````{{b{d{c}}}{{f{c}}}{}}{{bb{d{c}}}h{}}{{bc{d{c}}}b{}}{ce{}{}}00000000000000000000000000000{{{d{c}}}j{}}{{bb{d{c}}}{{n{hl}}}{}}000{{b{d{c}}}{{A`{c}}}{}}{{{d{c}}}h{}}{{{d{c}}}{{d{c}}}Ab}{{{Ad{c}}}{{Ad{c}}}Ab}{ll}{bb}{{{Af{c}}}{{Af{c}}}Ab}{{{f{c}}}{{f{c}}}Ab}{{{Ah{c}}}{{Ah{c}}}Ab}{{{Aj{c}}}{{Aj{c}}}Ab}{{{Al{c}}}{{Al{c}}}Ab}{{{A`{c}}}{{A`{c}}}Ab}{{{An{c}}}{{An{c}}}Ab}{{{B`{c}}}{{B`{c}}}Ab}{BbBb}{{{Bd{c}}}{{Bd{c}}}Ab}{{{Bf{c}}}{{Bf{c}}}Ab}{{ce}h{}{}}00000000000000{{bb}Bh}{{{d{c}}}j{}}{{b{d{c}}}{{Ad{c}}}{}}{{}{{d{c}}}{}}{{b{d{c}}}{{B`{c}}}{}}{{b{d{c}}}h{}}{{{d{c}}{d{c}}}BjBl}{{bb}Bj}{{{Af{c}}{Af{c}}}BjBl}{{BbBb}Bj}{{{Af{c}}}{{Bn{b}}}{}}{{{d{c}}C`}CbCd}{{{Ad{c}}C`}CbCd}{{{Ad{c}}C`}CbCf}{{lC`}Cb}0{{bC`}Cb}0{{{Af{c}}C`}Cb{}}{{{Af{c}}C`}CbCd}{{BbC`}Cb}{{b{d{c}}}{{Al{c}}}{}}{cc{}}00000000000000{{{d{c}}b}{{Bn{{Af{c}}}}}{}}{{{Af{c}}}c{}}10{{{d{c}}{Af{c}}}{{Bn{b}}}{}}{{{d{c}}Ch}{{Bn{b}}}{}}{{bc}hCj}{{Bbc}hCj}{{{d{c}}b}{{Af{c}}}{}}0{{bb{d{c}}}h{}}0{ce{}{}}00{bj}{bCh}222222222222222222222{{{d{c}}}Bj{}}{{b{d{c}}}Bj{}}{{{Af{c}}}Bj{}}{{{d{c}}}{{`{{Cn{}{{Cl{{Af{c}}}}}}}}}{}}0{{{Af{c}}}{{Bn{b}}}{}}{{}{{d{c}}}{}}{{{d{c}}c}b{}}{{{f{c}}}{{Bn{b}}}{}}{{{Ah{c}}}{{Bn{b}}}{}}{{{Aj{c}}}{{Bn{b}}}{}}{{{Al{c}}}{{Bn{b}}}{}}{{{A`{c}}}{{Bn{b}}}{}}{{{An{c}}}{{Bn{b}}}{}}{{{B`{c}}}{{Bn{b}}}{}}{{{Bd{c}}}{{Bn{Bb}}}{}}{{{Bf{c}}}{{Bn{Bb}}}{}};{{Bb{d{c}}}{{Bn{Bb}}}{}}<{{bb}{{Bn{Bh}}}}{{b{d{c}}}{{Aj{c}}}{}}{{b{d{c}}}{{Ah{c}}}{}}{{bb{d{c}}}h{}}4{{{Af{c}}}{{Bn{b}}}{}}{{b{d{c}}}h{}}0{{{d{c}}j}h{}}{{b{d{c}}}{{An{c}}}{}}{{b{d{c}}}{{Bf{c}}}{}}{ce{}{}}00000000000000{cD`{}}000{{b{d{c}}}{{Bd{c}}}{}}{c{{n{e}}}{}{}}00000000000000000000000000000{cDb{}}00000000000000{j{{d{c}}}{}}","D":"Ll","p":[[5,"NodeId",0,266],[5,"Arena",0,267],[5,"Ancestors",0,268],[1,"unit"],[1,"usize"],[6,"NodeError",0,269],[6,"Result",270],[5,"Children",0,268],[10,"Clone",271],[5,"DebugPrettyPrint",0,272],[5,"Node",0,273],[5,"Predecessors",0,268],[5,"PrecedingSiblings",0,268],[5,"FollowingSiblings",0,268],[5,"ReverseChildren",0,268],[5,"Descendants",0,268],[6,"NodeEdge",0,268],[5,"Traverse",0,268],[5,"ReverseTraverse",0,268],[6,"Ordering",274],[1,"bool"],[10,"PartialEq",274],[6,"Option",275],[5,"Formatter",276],[8,"Result",276],[10,"Debug",276],[10,"Display",276],[8,"NonZeroUsize",277],[10,"Hasher",278],[17,"Item"],[10,"Iterator",279],[5,"String",280],[5,"TypeId",281]],"r":[[0,268],[3,267],[4,268],[5,272],[6,268],[8,268],[11,273],[12,268],[13,269],[14,266],[15,268],[16,268],[20,268],[21,268],[23,268]],"b":[[106,"impl-Debug-for-DebugPrettyPrint%3C\'a,+T%3E"],[107,"impl-Display-for-DebugPrettyPrint%3C\'a,+T%3E"],[108,"impl-Debug-for-NodeError"],[109,"impl-Display-for-NodeError"],[110,"impl-Display-for-NodeId"],[111,"impl-Debug-for-NodeId"],[112,"impl-Display-for-Node%3CT%3E"],[113,"impl-Debug-for-Node%3CT%3E"],[146,"impl-Into%3Cusize%3E-for-NodeId"],[147,"impl-Into%3CNonZero%3Cusize%3E%3E-for-NodeId"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKQADAAcAB0AQQAeAGIAAABlAAMAagAJAIoAAwCTAAEAoQAIALIACAC+AAAAyQASAN0ALAA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
