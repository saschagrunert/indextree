var searchIndex = new Map(JSON.parse('[\
["indextree",{"t":"FPPFFFFPFPPFGGFFFPPPFFPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Ancestors","AppendAncestor","AppendSelf","Arena","Children","DebugPrettyPrint","Descendants","End","FollowingSiblings","InsertAfterSelf","InsertBeforeSelf","Node","NodeEdge","NodeError","NodeId","PrecedingSiblings","Predecessors","PrependAncestor","PrependSelf","Removed","ReverseChildren","ReverseTraverse","Start","Traverse","ancestors","append","append_value","as_slice","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","checked_append","checked_insert_after","checked_insert_before","checked_prepend","children","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","count","debug_pretty_print","default","descendants","detach","eq","eq","eq","eq","first_child","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","following_siblings","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get_mut","get_mut","get_node_id","get_node_id_at","hash","hash","index","index_mut","insert_after","insert_before","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","is_removed","is_removed","iter","iter_mut","last_child","macros","new","new_node","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_sibling","next_traverse","parent","partial_cmp","preceding_siblings","predecessors","prepend","prev_traverse","previous_sibling","remove","remove_subtree","reserve","reverse_children","reverse_traverse","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","traverse","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity"],"q":[[0,"indextree"],[271,"indextree::id"],[272,"indextree::arena"],[273,"indextree::traverse"],[274,"indextree::node"],[275,"indextree::error"],[276,"core::result"],[277,"core::clone"],[278,"indextree::debug_pretty_print"],[279,"core::cmp"],[280,"core::option"],[281,"core::fmt"],[282,"core::num::nonzero"],[283,"core::hash"],[284,"core::slice::iter"],[285,"alloc::string"],[286,"core::any"]],"i":[0,10,10,0,0,0,0,20,0,10,10,0,0,0,0,0,0,10,10,10,0,0,20,0,1,1,1,2,2,14,10,1,7,4,15,16,17,12,18,19,20,21,22,2,14,10,1,7,4,15,16,17,12,18,19,20,21,22,2,1,1,1,1,1,2,2,14,10,1,7,4,15,16,17,12,18,19,20,21,22,2,14,10,1,7,4,15,16,17,12,18,19,20,21,22,1,2,1,2,1,1,2,1,7,20,7,2,14,14,10,10,1,1,7,7,20,1,2,14,10,1,7,4,15,16,17,12,18,19,20,21,22,2,7,2,7,2,2,1,20,2,2,1,1,2,14,10,1,1,1,7,4,15,16,17,12,18,19,20,21,22,4,15,16,17,12,18,19,21,22,2,1,7,2,2,7,0,2,2,4,15,16,17,12,18,19,21,22,16,17,12,7,20,7,1,1,1,1,20,7,1,1,2,1,1,2,14,10,1,7,4,15,16,17,12,18,19,20,21,22,14,10,1,7,1,2,14,10,1,7,4,15,16,17,12,18,19,20,21,22,2,14,10,1,7,4,15,16,17,12,18,19,20,21,22,2,14,10,1,7,4,15,16,17,12,18,19,20,21,22,2],"f":"````````````````````````{{b{f{{d{c}}}}}{{h{c}}}{}}{{bb{f{j{d{c}}}}}l{}}{{bc{f{j{d{c}}}}}b{}}{{{f{{d{c}}}}}{{f{{A`{{n{c}}}}}}}{}}{{{f{c}}}{{f{e}}}{}{}}00000000000000{{{f{jc}}}{{f{je}}}{}{}}00000000000000{{{f{{d{c}}}}}Ab{}}{{bb{f{j{d{c}}}}}{{Af{lAd}}}{}}000{{b{f{{d{c}}}}}{{Ah{c}}}{}}{{{f{j{d{c}}}}}l{}}{{{f{{d{c}}}}}{{d{c}}}Aj}{{{f{{Al{c}}}}}{{Al{c}}}Aj}{{{f{Ad}}}Ad}{{{f{b}}}b}{{{f{{n{c}}}}}{{n{c}}}Aj}{{{f{{h{c}}}}}{{h{c}}}Aj}{{{f{{An{c}}}}}{{An{c}}}Aj}{{{f{{B`{c}}}}}{{B`{c}}}Aj}{{{f{{Bb{c}}}}}{{Bb{c}}}Aj}{{{f{{Ah{c}}}}}{{Ah{c}}}Aj}{{{f{{Bd{c}}}}}{{Bd{c}}}Aj}{{{f{{Bf{c}}}}}{{Bf{c}}}Aj}{{{f{Bh}}}Bh}{{{f{{Bj{c}}}}}{{Bj{c}}}Aj}{{{f{{Bl{c}}}}}{{Bl{c}}}Aj}{{{f{c}}{f{je}}}l{}{}}00000000000000{{{f{b}}{f{b}}}Bn}{{{f{{d{c}}}}}Ab{}}{{{f{b}}{f{{d{c}}}}}{{Al{c}}}{}}{{}{{d{c}}}{}}{{b{f{{d{c}}}}}{{Bf{c}}}{}}{{b{f{j{d{c}}}}}l{}}{{{f{{d{c}}}}{f{{d{c}}}}}C`Cb}{{{f{b}}{f{b}}}C`}{{{f{{n{c}}}}{f{{n{c}}}}}C`Cb}{{{f{Bh}}{f{Bh}}}C`}{{{f{{n{c}}}}}{{Cd{b}}}{}}{{{f{{d{c}}}}{f{jCf}}}ChCj}{{{f{{Al{c}}}}{f{jCf}}}ChCl}{{{f{{Al{c}}}}{f{jCf}}}ChCj}{{{f{Ad}}{f{jCf}}}Ch}0{{{f{b}}{f{jCf}}}Ch}0{{{f{{n{c}}}}{f{jCf}}}ChCj}{{{f{{n{c}}}}{f{jCf}}}Ch{}}{{{f{Bh}}{f{jCf}}}Ch}{{b{f{{d{c}}}}}{{Bb{c}}}{}}{cc{}}00000000000000{{{f{{d{c}}}}b}{{Cd{{f{{n{c}}}}}}}{}}{{{f{{n{c}}}}}{{f{c}}}{}}{{{f{j{d{c}}}}b}{{Cd{{f{j{n{c}}}}}}}{}}{{{f{j{n{c}}}}}{{f{jc}}}{}}{{{f{{d{c}}}}{f{{n{c}}}}}{{Cd{b}}}{}}{{{f{{d{c}}}}Cn}{{Cd{b}}}{}}{{{f{b}}{f{jc}}}lD`}{{{f{Bh}}{f{jc}}}lD`}{{{f{{d{c}}}}b}{{f{{n{c}}}}}{}}{{{f{j{d{c}}}}b}{{f{j{n{c}}}}}{}}{{bb{f{j{d{c}}}}}l{}}0{ce{}{}}000{bAb}{bCn}22222222222222222222{{{f{{d{c}}}}}C`{}}{{b{f{{d{c}}}}}C`{}}{{{f{{n{c}}}}}C`{}}{{{f{{d{c}}}}}{{Db{{n{c}}}}}{}}{{{f{j{d{c}}}}}{{Dd{{n{c}}}}}{}}{{{f{{n{c}}}}}{{Cd{b}}}{}}`{{}{{d{c}}}{}}{{{f{j{d{c}}}}c}b{}}{{{f{j{h{c}}}}}{{Cd{b}}}{}}{{{f{j{An{c}}}}}{{Cd{b}}}{}}{{{f{j{B`{c}}}}}{{Cd{b}}}{}}{{{f{j{Bb{c}}}}}{{Cd{b}}}{}}{{{f{j{Ah{c}}}}}{{Cd{b}}}{}}{{{f{j{Bd{c}}}}}{{Cd{b}}}{}}{{{f{j{Bf{c}}}}}{{Cd{b}}}{}}{{{f{j{Bj{c}}}}}{{Cd{Bh}}}{}}{{{f{j{Bl{c}}}}}{{Cd{Bh}}}{}}{{{f{j{B`{c}}}}}{{Cd{e}}}{}{}}{{{f{j{Bb{c}}}}}{{Cd{e}}}{}{}}{{{f{j{Ah{c}}}}}{{Cd{e}}}{}{}}>{{Bh{f{{d{c}}}}}{{Cd{Bh}}}{}}?{{{f{b}}{f{b}}}{{Cd{Bn}}}}{{b{f{{d{c}}}}}{{B`{c}}}{}}{{b{f{{d{c}}}}}{{An{c}}}{}}{{bb{f{j{d{c}}}}}l{}}4{{{f{{n{c}}}}}{{Cd{b}}}{}}{{b{f{j{d{c}}}}}l{}}0{{{f{j{d{c}}}}Ab}l{}}{{b{f{{d{c}}}}}{{Bd{c}}}{}}{{b{f{{d{c}}}}}{{Bl{c}}}{}}{{{f{c}}}e{}{}}00000000000000{{{f{c}}}Df{}}000{{b{f{{d{c}}}}}{{Bj{c}}}{}}{c{{Af{e}}}{}{}}00000000000000000000000000000{{{f{c}}}Dh{}}00000000000000{Ab{{d{c}}}{}}","D":"Ln","p":[[5,"NodeId",0,271],[5,"Arena",0,272],[1,"reference"],[5,"Ancestors",0,273],[0,"mut"],[1,"unit"],[5,"Node",0,274],[1,"slice"],[1,"usize"],[6,"NodeError",0,275],[6,"Result",276],[5,"Children",0,273],[10,"Clone",277],[5,"DebugPrettyPrint",0,278],[5,"Predecessors",0,273],[5,"PrecedingSiblings",0,273],[5,"FollowingSiblings",0,273],[5,"ReverseChildren",0,273],[5,"Descendants",0,273],[6,"NodeEdge",0,273],[5,"Traverse",0,273],[5,"ReverseTraverse",0,273],[6,"Ordering",279],[1,"bool"],[10,"PartialEq",279],[6,"Option",280],[5,"Formatter",281],[8,"Result",281],[10,"Debug",281],[10,"Display",281],[8,"NonZeroUsize",282],[10,"Hasher",283],[5,"Iter",284],[5,"IterMut",284],[5,"String",285],[5,"TypeId",286]],"r":[[0,273],[3,272],[4,273],[5,278],[6,273],[8,273],[11,274],[12,273],[13,275],[14,271],[15,273],[16,273],[20,273],[21,273],[23,273]],"b":[[107,"impl-Display-for-DebugPrettyPrint%3C\'a,+T%3E"],[108,"impl-Debug-for-DebugPrettyPrint%3C\'a,+T%3E"],[109,"impl-Debug-for-NodeError"],[110,"impl-Display-for-NodeError"],[111,"impl-Debug-for-NodeId"],[112,"impl-Display-for-NodeId"],[113,"impl-Debug-for-Node%3CT%3E"],[114,"impl-Display-for-Node%3CT%3E"],[148,"impl-Into%3Cusize%3E-for-NodeId"],[149,"impl-Into%3CNonZero%3Cusize%3E%3E-for-NodeId"]],"c":"OjAAAAEAAAAAAAEAEAAAABUAzAA=","e":"OzAAAAEAAKgADQAdAB0AQgAeAGMAAABmAAMAawAJAIsAAwCVAAEAogAIALEAAAC0AAsAwwAAAM4AEgDiACwA"}],\
["indextree_macros",{"t":"Q","n":["tree"],"q":[[0,"indextree_macros"]],"i":[0],"f":"`","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
